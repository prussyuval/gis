{"version":3,"sources":["volcano.png","helpers/ServerRequest.js","table.js","home.js","loader.gif","volcano.js","register.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["url","ServerRequest","method","response","console","log","params","cancelToken","axios","get","catch","error","this","logResponse","data","body","post","withCredentials","COLUMNS","field","headerName","hide","description","sortable","width","VolcanoTable","useState","volcanos","setVolcanos","loading","setLoading","history","useHistory","useEffect","a","records","refreshOnMount","rows","v","date","fields","day","year","month","coordinates","push","recordid","name","elevation","location","status","deaths","country","className","onCellClick","event","rowId","row","id","defaultMuiPrevented","columns","pageSize","autoHeight","HomePage","volcanosCount","setVolcanosCount","length","start","formattingFn","value","toLocaleString","end","duration","src","height","frameBorder","Volcano","details","setDetails","useParams","Loader","alt","Card","CardContent","Typography","color","gutterBottom","variant","component","type","vei","injuries","useStyles","makeStyles","theme","root","display","flexDirection","justifyContent","alignItems","padding","spacing","margin","Form","handleClose","classes","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","onClick","postWithUrl","TextField","label","required","onChange","e","target","Button","LogIn","setLoggedIn","VDrawer","React","state","setState","toggleDrawer","open","key","setRouter","path","Fragment","style","fill","Drawer","anchor","onClose","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","createTheme","palette","main","secondary","App","loggedIn","ThemeProvider","volcano","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4ac9fda.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/volcano.816c94d8.png\";","import axios from 'axios';\n\nconst url = \"https://data.opendatasoft.com/api/records/1.0/search/\";\n\nconst LOGGING = true;\n\nclass ServerRequest {\n    static logResponse(method, response) {\n        if (LOGGING === true) {\n            console.log(`[${method}] Received response:`);\n            console.log(response);\n        }\n    }\n\n    static async get(params = {}, cancelToken) {\n        const response = await axios.get(url, {\n            cancelToken: cancelToken,\n            params: params,\n        }).catch(error => {\n            return error.response;\n        });\n        this.logResponse('GET', response);\n        return response.data;\n    }\n\n    static async postWithUrl(url, body) {\n        let response;\n        try {\n            response = await axios.post(url, body, {\n                withCredentials: false\n            });\n        } catch {\n            return null;\n        }\n\n        this.logResponse('POST', response);\n        return response;\n    }\n}\n\nexport default ServerRequest;","import {useEffect, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport ServerRequest from './helpers/ServerRequest';\nimport {useHistory} from \"react-router-dom\";\n\nconst COLUMNS = [\n    { field: 'id', headerName: 'ID', hide: true },\n    {\n        field: 'name',\n        headerName: 'Name',\n        description: 'Volcano Name',\n        sortable: false,\n        width: \"180\"\n    },\n    {\n        field: 'date',\n        headerName: 'Date',\n        description: 'Volcano explodation date',\n        sortable: true,\n        width: \"180\"\n    },\n    {\n        field: 'elevation',\n        headerName: 'Elevation',\n        description: 'Volcano damage elevation',\n        sortable: false,\n        width: \"180\"\n    },\n    {\n        field: 'location',\n        headerName: 'Location',\n        description: 'Volcano location',\n        sortable: false,\n        width: \"180\"\n    },\n    {\n        field: 'country',\n        headerName: 'Country',\n        description: 'Volcano origin country',\n        sortable: false,\n        width: \"180\"\n    },\n    {\n        field: 'status',\n        headerName: 'Status',\n        description: 'Volcano status',\n        sortable: false,\n        width: \"180\"\n    },\n    {\n        field: 'deaths',\n        headerName: 'Deaths',\n        description: 'Deaths caused by the volcano',\n        sortable: true,\n        width: \"180\"\n    },\n    {\n        field: 'coordinates',\n        headerName: 'Coordinates',\n        description: 'Volcano location',\n        sortable: false,\n        width: \"180\"\n    },\n];\n\nconst VolcanoTable = () => {\n    const [volcanos, setVolcanos] = useState([]);\n    const [loading, setLoading] = useState(true);\n    let history = useHistory();\n\n    useEffect(() => {\n        async function refreshOnMount() {\n            const response = await ServerRequest.get({\n                \"dataset\": \"significant-volcanic-eruption-database@public\",\n                \"facet\": [\"year\", \"status\", \"coordinates\", \"month\", \"day\"],\n                \"rows\": 1000,\n            });\n            setVolcanos(response.records);\n            setLoading(false);\n        }\n\n        refreshOnMount();\n    }, []);\n\n    let rows = [];\n\n    for (let v of volcanos) {\n        let date = \"Unknown\";\n        if (v.fields.day) {\n            date = v.fields.year + \"-\" + v.fields.month + \"-\" + v.fields.day;\n        } else if (v.fields.month) {\n            date = v.fields.year + \"-\" + v.fields.month;\n        } else {\n            date = v.fields.year;\n        }\n\n        let coordinates = v.fields.coordinates[0] + \" , \" + v.fields.coordinates[1];\n\n        rows.push({\n            \"id\": v.recordid,\n            \"name\": v.fields.name,\n            \"elevation\": v.fields.elevation,\n            \"location\": v.fields.location,\n            \"status\": v.fields.status,\n            \"deaths\": v.fields.deaths,\n            \"country\": v.fields.country,\n            \"date\": date,\n            \"coordinates\": coordinates\n        });\n    }\n\n    const onClick = (params, event) => {\n        let rowId = params.row.id\n        history.push(`/gis/volcano/${rowId}`);\n        event.defaultMuiPrevented = true;\n    };\n\n    return (\n        <div className=\"table-container\">\n          <DataGrid\n            loading={loading}\n            onCellClick={onClick}\n            rows={rows}\n            columns={COLUMNS}\n            pageSize={12}\n            autoHeight={true}\n            />\n        </div>\n    );\n}\n\nexport default VolcanoTable;\n","import {useEffect, useState} from \"react\";\nimport CountUp from \"react-countup\";\n\nimport ServerRequest from \"./helpers/ServerRequest\";\n\nconst HomePage = () => {\n    const [volcanosCount, setVolcanosCount] = useState(0);\n\n    useEffect(() => {\n        async function refreshOnMount() {\n            const response = await ServerRequest.get({\n                \"dataset\": \"significant-volcanic-eruption-database@public\",\n                \"facet\": [],\n                \"rows\": 10000,\n            });\n            setVolcanosCount(response.records.length);\n        }\n\n        refreshOnMount();\n    }, []);\n\n  return (\n      <div className=\"home-page\">\n          <div className=\"site-title\">\n              Volcano\n          </div>\n          <div className=\"site-counter\">\n            <CountUp\n                start={0}\n                formattingFn={(value) => value.toLocaleString()}\n                end={volcanosCount}\n                duration={1.5} />\n              <span className=\"counter-text\">\n                  Total Volcanos in our site\n              </span>\n          </div>\n          <iframe className=\"main-map\"\n              src=\"https://data.opendatasoft.com/explore/embed/dataset/significant-volcanic-eruption-database@public/map/?q=&location=2,3.18934,-1.52688&basemap=jawg.streets&static=false&datasetcard=false&scrollWheelZoom=false\"\n              width=\"80%\" height=\"600\" frameBorder=\"0\"></iframe>\n      </div>\n  )\n};\n\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/loader.c0c2f010.gif\";","import {\n  useParams\n} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport ServerRequest from \"./helpers/ServerRequest\";\nimport Loader from \"./loader.gif\"\n\n\nconst Volcano = () => {\n  const [details, setDetails] = useState({});\n  let { id } = useParams();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function refreshOnMount() {\n        const response = await ServerRequest.get({\n            \"dataset\": \"significant-volcanic-eruption-database@public\",\n            \"facet\": [],\n            \"q\": `recordid=${id}`,\n            \"rows\": 1,\n        });\n        setDetails(response.records[0].fields);\n        setLoading(false);\n    }\n\n    refreshOnMount();\n    }, []);\n\n    if (loading) {\n      return (\n          <div className=\"loader\">\n            <img src={Loader} alt=\"\"/>\n          </div>\n      );\n    }\n\n    return (\n       <div className=\"single-volcano\">\n         <Card className=\"single-volcano-card\">\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n              You are viewing volcano\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" className=\"volcano-name\">\n            {details.name}\n          </Typography>\n          <Typography color=\"textSecondary\">\n              {details.status}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            This volcano exploded in {details.country}.\n            <br />\n            Exact location: {details.location}\n            <CardActionArea>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Type\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {details.type}\n              </Typography>\n            </CardActionArea>\n            <CardActionArea>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Year\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {details.year}\n              </Typography>\n            </CardActionArea>\n            <CardActionArea>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Month\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {details.month ? details.month : \"Unknown\"}\n              </Typography>\n            </CardActionArea>\n            <CardActionArea>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Day\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {details.day ? details.day : \"Unknown\"}\n              </Typography>\n            </CardActionArea>\n            <CardActionArea>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Elevation\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {details.elevation} Meters\n              </Typography>\n            </CardActionArea>\n            <CardActionArea>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Explosivity Index\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {details.vei}\n              </Typography>\n            </CardActionArea>\n            <CardActionArea>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Deaths\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {details.deaths ? details.deaths : 0}\n              </Typography>\n            </CardActionArea>\n            <CardActionArea>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Injuries\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {details.injuries ? details.injuries : 0}\n              </Typography>\n            </CardActionArea>\n          </Typography>\n        </CardContent>\n      </Card>\n         <iframe className=\"single-volcano-map\"\n              src={`https://data.opendatasoft.com/explore/embed/dataset/significant-volcanic-eruption-database@public/map/?q=recordid=${id}&location=8,${details.coordinates}&basemap=jawg.streets&static=false&datasetcard=false&scrollWheelZoom=false`}\n              width=\"1200\" height=\"600\" frameBorder=\"0\">\n         </iframe>\n        </div>\n    );\n}\n\nexport default Volcano;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ServerRequest from \"./helpers/ServerRequest\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '300px',\n    },\n    '& .MuiButtonBase-root': {\n      margin: theme.spacing(2),\n    },\n  },\n}));\n\nconst Form = ({ handleClose }) => {\n  const classes = useStyles();\n  // create state variables for each input\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onClick = async () => {\n      const data = {\n          \"first_name\": firstName,\n          \"last_name\": lastName,\n          \"email\": email,\n          \"password\": password,\n      }\n\n      await ServerRequest.postWithUrl(\"https://lichluchit.com/api/register\", data);\n    }\n\n  return (\n      <div className=\"register-title-form\">\n        <Typography variant=\"h4\" component=\"h4\" className=\"register-title\">\n          Register\n        </Typography>\n        <div className={classes.root}>\n          <TextField\n            label=\"First Name\"\n            variant=\"filled\"\n            required\n            value={firstName}\n            onChange={e => setFirstName(e.target.value)}\n          />\n          <TextField\n            label=\"Last Name\"\n            variant=\"filled\"\n            required\n            value={lastName}\n            onChange={e => setLastName(e.target.value)}\n          />\n          <TextField\n            label=\"Email\"\n            variant=\"filled\"\n            type=\"email\"\n            required\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <TextField\n            label=\"Password\"\n            variant=\"filled\"\n            type=\"password\"\n            required\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n          <div>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={async () => {await onClick()}}>\n              Signup\n            </Button>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default Form;","import react, {useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport ServerRequest from \"./helpers/ServerRequest\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '300px',\n    },\n    '& .MuiButtonBase-root': {\n      margin: theme.spacing(2),\n    },\n  },\n}));\n\nconst LogIn = ({setLoggedIn}) => {\n    const classes = useStyles();\n\n    // create state variables for each input\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const onClick = async () => {\n        const data = {\n          \"email\": email,\n          \"password\": password,\n        }\n\n        const response = await ServerRequest.postWithUrl(\"https://lichluchit.com/api/login\", data);\n        if (response.data.data === \"yes\") {\n            setLoggedIn(true);\n        }\n\n    };\n\n    return (\n        <div className=\"register-title-form\">\n            <Typography variant=\"h4\" component=\"h4\" className=\"register-title\">\n              Log In\n            </Typography>\n            <form className={classes.root}>\n          <TextField\n            label=\"Email\"\n            variant=\"filled\"\n            type=\"email\"\n            required\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <TextField\n            label=\"Password\"\n            variant=\"filled\"\n            type=\"password\"\n            required\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n          <div>\n            <Button type=\"button\" variant=\"contained\" color=\"primary\" onClick={async () => {await onClick()}}>\n              LogIn\n            </Button>\n          </div>\n        </form>\n        </div>\n    )\n}\n\nexport default LogIn;","import React, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory\n} from \"react-router-dom\";\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport HomeIcon from '@material-ui/icons/Home';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { createTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport '@fontsource/roboto';\n\nimport volcano from './volcano.png';\nimport './App.scss';\nimport VolcanoTable from './table';\nimport HomePage from './home';\nimport Volcano from \"./volcano\";\nimport Register from \"./register\";\nimport LogIn from \"./login\";\n\nconst VDrawer = () => {\n  const [state, setState] = React.useState(false);\n  let history = useHistory();\n\n  const toggleDrawer = (open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(open);\n  };\n\n  const setRouter = (path) => {\n      history.push(path);\n  }\n\n  return (\n    <div>\n      <React.Fragment key=\"left\">\n          <Button onClick={toggleDrawer(true)}>\n              <MenuIcon style={{fill: \"black\"}}/>\n          </Button>\n          <Drawer anchor=\"left\" open={state} onClose={toggleDrawer(false)}>\n            <div\n              className=\"nav-bar\"\n              role=\"presentation\"\n              onClick={toggleDrawer(false)}\n              onKeyDown={toggleDrawer(false)}\n            >\n              <List>\n                <ListItem button key=\"Home\" onClick={() => setRouter(\"/gis/\")}>\n                    <ListItemIcon>\n                        <HomeIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                  </ListItem>\n                  <ListItem button key=\"Table\" onClick={() => setRouter(\"/gis/table\")}>\n                    <ListItemIcon>\n                        <TableChartIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Table\" />\n                  </ListItem>\n              </List>\n              <Divider />\n              <List>\n                  <ListItem button key=\"Register\" onClick={() => setRouter(\"/gis/register\")}>\n                    <ListItemIcon>\n                        <VpnKeyIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Register\" />\n                  </ListItem>\n              </List>\n            </div>\n          </Drawer>\n        </React.Fragment>\n    </div>\n  );\n};\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"rgb(223, 71, 89)\",\n    },\n    secondary: {\n      main: \"rgb(223, 71, 89)\",\n    },\n  },\n});\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(false);\n    console.log(\"loggedIn: \", loggedIn);\n    return (\n     <ThemeProvider theme={theme}>\n        <Router>\n            <div className=\"App\">\n              <div className=\"header\">\n                  <VDrawer />\n                  <img src={volcano} width=\"25px\" alt=\"\"/>\n                  Volcano\n              </div>\n                <Switch>\n                  <Route exact path=\"/gis/\">\n                    <HomePage />\n                  </Route>\n                  <Route path=\"/gis/table\">\n                      {loggedIn ? <VolcanoTable /> : <LogIn setLoggedIn={setLoggedIn} />}\n                  </Route>\n                  <Route path=\"/gis/volcano/:id\">\n                      {loggedIn ? <Volcano /> : <LogIn setLoggedIn={setLoggedIn} />}\n                  </Route>\n                  <Route path=\"/gis/register\">\n                      <Register />\n                  </Route>\n                </Switch>\n            </div>\n        </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}